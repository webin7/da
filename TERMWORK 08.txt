TERMWORK 08                  
#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define MAX 20

char arr[MAX][MAX];

void print_grid(int n, int x[]){
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            arr[i][j]='-';
        }
    }

    for(int i=1;i<=n;i++){
        arr[i][x[i]]='Q';
    }

    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            printf("\t%c",arr[i][j]);
        }
        printf("\n");
    }
}

int safetoplace(int x[], int k){
    for(int i=1;i<k;i++){
        if(x[i]==x[k]||i-x[i]==k-x[k]||i+x[i]==k+x[k])
            return 0;//false
    }
    return 1;//true
}

void nqueens(int n){
    int x[20],count=0,k=1;
    x[k]=0;
    while(k!=0){
        x[k]=x[k]+1;
        while((x[k]<=n)&&(!safetoplace(x,k))){
            x[k]=x[k]+1;
        }
        if(x[k]<=n){
            if(k==n){
                count++;
                printf("\n\tPlacement %d is : \n\n\n",count);
                print_grid(n,x);
                getch();
            }
            else{
                k++;
                x[k]=0;
            }
        }
        else{
            k--;
        }
    }
    return;
}

int main()
{
    int n;
    printf("\t CPROGRAM OF N-QUEEN PROBLEM\n\n");
    printf("\nEnter the number of Queens : ");
    scanf("%d",&n);
    printf("\n\n\tUSING %d QUEEN'S STRATEGY\n\n",n);
    nqueens(n);
    return 0;
}

