TERMWORK 5       
#include <stdio.h>
#define MAX 10
#define INF 999

int main() {
    int i, j, n, visited[MAX] = {0}, cost[MAX][MAX];
    int min_cost = 0, edge_count = 0;

    // Step 1: Input
    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter cost matrix (999 for INF):\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &cost[i][j]);

    visited[0] = 1; // Start with vertex 0

    printf("\nEdges in MST:\n");

    while (edge_count < n - 1) {
        int min = INF, a = -1, b = -1;

        for (i = 0; i < n; i++) {
            if (visited[i]) {
                for (j = 0; j < n; j++) {
                    if (!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        a = i;
                        b = j;
                    }
                }
            }
        }

        if (a != -1 && b != -1) {
            printf("Edge (%d, %d) = %d\n", a, b, min);
            visited[b] = 1;
            min_cost += min;
            edge_count++;
        }
    }

    printf("\nMinimum cost = %d\n", min_cost);
    return 0;
}

OUTPUT =>

Enter the number of vertices: 4
Enter the cost matrix (Enter 999 for INFINITY):
999 1 4 2
1 999 999 999
4 999 999 3
2 999 3 999

Edges of the spanning tree -
1. EDGE (1,2) = 1
2. EDGE (1,4) = 2
3. EDGE (4,3) = 3

MINIMUM COST = 6
